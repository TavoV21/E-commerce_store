# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    env:
      DOCKER_MAIN_USER: ${{vars.DOCKER_MAIN_USER}}
      DOCKER_MAIN_PASS: ${{secrets.DOCKER_MAIN_TOKEN}}
      DOCKER_GUEST_USER: ${{vars.DOCKER_GUEST_USER}}
      DOCKER_GUEST_PASSWORD: ${{secrets.DOCKER_GUEST_PASSWORD}}
      JWT_SECRETKEY: ${{secrets.JWT_SECRET_KEY}}
      NODEMAILER_EMAIL: ${{vars.NODEMAILER_EMAIL}}
      NODEMAILER_PASSWORD: ${{secrets.NODEMAILER_PASSWORD}}
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v5
      - name: "List folders"
        run: |
          echo "Hello from this pipeline!"
          pwd
          ls -la

      - name: "Check docker"
        run: |
          docker -v
          docker compose version

      - name: "Log in to Docker Hub with user tavoguest22"
        uses: docker/login-action@v3
        with:
          username: ${{env.DOCKER_GUEST_USER}}
          password: ${{env.DOCKER_GUEST_PASSWORD}}

      - name: "test"
        run: |
          echo "NODE_ENV=test" > backend/.env.test
          echo "POSTGRES_DB=shopping_test" >> backend/.env.test
          echo "POSTGRES_HOST=testdb_pg" >> backend/.env.test
          echo "POSTGRES_USER=tavo" >> backend/.env.test
          echo "POSTGRES_PASSWORD=1234" >> backend/.env.test
          echo "POSTGRES_PORT=5432" >> backend/.env.test
          echo "SECRET=${{env.JWT_SECRETKEY}}" >> backend/.env.test
          echo "ADMIN_EMAIL=admin@gmail.com" >> backend/.env.test
          echo "ADMIN_PASSWORD=1111" >> backend/.env.test
          echo "EMAIL=${{env.NODEMAILER_EMAIL}}" >> backend/.env.test
          echo "PASS_EMAIL=${{env.NODEMAILER_PASSWORD}}" >> backend/.env.test
          docker compose -f docker-compose.test.yml up --abort-on-container-exit --exit-code-from app
          docker compose -f docker-compose.test.yml down -v

      - name: "Log in to Docker Hub with user tavov21"
        uses: docker/login-action@v3
        with:
          username: ${{env.DOCKER_MAIN_USER}}
          password: ${{env.DOCKER_MAIN_PASS}}

      - name: "showing the containers"
        uses: docker images

      - name: "showing the imagen"
        uses: docker ps -a

      - name: "remove & clean all containers"
        uses: docker rm $(docker ps -aq) || true

      - name: "remove & clean all images"
        uses: docker rmi $(docker images -q) || true

      - name: "build and push Docker image backend"
        uses: docker/build-push-action@v6
        with:
          context: ./backend
          push: true
          tags: tavov21/store_backend:latest

      - name: "build and push Docker image frontend"
        uses: docker/build-push-action@v6
        with:
          context: ./frontend
          push: true
          tags: tavov21/store_frontend:latest
